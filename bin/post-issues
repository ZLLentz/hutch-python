#!/usr/bin/env python
import os
import getpass
import logging
import argparse

from hutch_python.constants import BUG_REPORT_PATH
from hutch_python.bug import post_to_github

logger = logging.getLogger(__name__)


description = """\
Post all of the stored issue to https://github.com/pcdshub/Bug-Reports

This requires a valid GitHub account that is authorized to post issues in
the pcdshub organization. By default this script will be run automatically at a
frequent interval, but if that is failing or you feel the need to immediately
push an issue upstream this script can be utilized.


"""


def main():
    """Post all issues in BUG_REPORT_PATH"""
    # Create argument parser
    fclass = argparse.RawDescriptionHelpFormatter
    parser = argparse.ArgumentParser(epilog=description,
                                     formatter_class=fclass)
    parser.add_argument('-u', '--user', dest='username',
                        default=None,
                        help="Username for GitHub account")
    parser.add_argument('-p', '--pw', dest='password',
                        default=None,
                        help='Password for GitHub account. This will be '
                             'queried for if not entered at call time.')
    args = parser.parse_args()
    # Ask for the password once so if it isn't asked to repetitively
    pw = args.password or getpass.getpass()
    # Run post_to_github on every stored issue
    for issue in os.listdir(BUG_REPORT_PATH):
        if issue.endswith('.json'):
            try:
                logger.info('Posting %s ...', issue)
                post_to_github(os.path.join(BUG_REPORT_PATH, issue),
                               user=args.username, pw=pw)
            except Exception:
                logger.exception("Error posting %s", issue)


if __name__ == '__main__':
    # Configure logger
    logging.basicConfig(level=logging.INFO)
    # Post issues
    main()
